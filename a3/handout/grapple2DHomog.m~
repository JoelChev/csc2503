%% File: grapple2DHomog
%% A3 2016 handout code
%% Uses RANSAC to estimate H matrix from corresponding points.
%%
%% ADJ

clear
close all
FALSE = 1 == 0;
TRUE = ~FALSE;
global matlabVisRoot

%% We need to ensure the path is set for the iseToolbox.
if length(matlabVisRoot)==0
  dir = pwd;
  cd '../../matlab/'   %% CHANGE THIS
  startup;
  cd(dir);
end

reconRoot = '.';  %% CHANGE THIS
addpath([reconRoot '/data/wadham']);
addpath([reconRoot '/utils']);


% Random number generator seed:
seed = round(sum(1000*clock));
rand('state', seed);
seed0 = seed;
% We also need to start randn. Use a seedn generated from seed:
seedn = round(rand(1,1) * 1.0e+6);
randn('state', seedn);

nTrial = 10;  % Number of ransac trials to try.

%% Wadham left image: use  wadham/001.jpg
imPath = 'data/wadham/'; fnameLeft = '001'; 
im = imread([imPath fnameLeft],'jpg');
im = double(im(:,:,2));
imDwn = blurDn(im,1)/2;
imLeft = imDwn;

%% Read correspondence data
load data/wadham/corrPnts5
%% Wadham right image data/wadham002-5.jpg use for corrPnts2-5 respectively
fnameRight = '005';
im = imread([imPath fnameRight],'jpg');
im = double(im(:,:,2));
imDwn = blurDn(im,1)/2;
imRight = imDwn;

clear imPts;
imPts = cat(3, im_pos1', im_pos2');
nPts = size(imPts,2);
if size(imPts,1) == 2
  imPts = cat(1, imPts, ones(1,nPts,2));
end

%% RANSAC for H
seeds = {};
sigma = 2.0; rho = 0.1;
for kTrial = 1: nTrial
  %% Test out H matrix on a random sample of 4 points
  idTest = randperm(nPts);
  nTest = min(4, nPts);
  idTest = idTest(1:nTest);

  %% Solve for H matrix on the random sample
  [H Sa] = linEstH(imPts(:,idTest,1), imPts(:,idTest,2),1);

  
  %% Compute distance error of homography.
  dist = zeros(1,nPts);
  for k = 1:nPts
    homog = H*imPts(:,k,2);
    homog = homog/homog(3);
    dist(k) = sqrt(sum(imPts(:,k,1)-homog).^2);
  end
  
  %% Detect inliers
  idInlier = abs(dist) < rho*sigma;
  
  %% Count inliers
  nInlier = sum(idInlier);
  if nInlier > 20
    %% Store sets of sampled points with at least 20 inliers
    seed = struct;
    seed.id = idTest;
    seed.idInlier = idInlier;
    seed.nInlier = nInlier;
    seed.H = H;
    
    kSeed = length(seeds)+1;
    seeds{kSeed} = seed;
  end
end 
%% Done RANSAC trials

%% Extract best solution
nInliers = zeros(1, length(seeds));
for ks = 1:length(seeds)
  nInliers(ks) = seeds{ks}.nInlier;
end 
[nM ks] = max(nInliers);
nInliers(ks)

%%  Refine estimate of H using all inliers.
H = seeds{ks}.H;
idInlier = seeds{ks}.idInlier;

idInlierOld = idInlier;
sum(idInlier)
%% Do at most 10 iterations attempting to entrain as many points as possible.
for kIt = 1: 10
  %% Fit H using all current inliers
  [H Sa ] = linEstH(imPts(:,idInlier,1), imPts(:,idInlier,2),1);
  
  %% Compute distance error measure
  dist = zeros(1,nPts);
  for k = 1:nPts
    homog = H*imPts(:,k,2);
    homog = homog/homog(3);
    dist(k) = sqrt(sum(imPts(:,k,1)-homog).^2);
  end
  idInlier = abs(dist) < rho*sigma;
  nInlier = sum(idInlier)
  
  %% If we have the same set of inliers as the previous iteration then stop.
  if all(idInlier == idInlierOld)
    break;
  end
  idInlierOld = idInlier;
end
  

%Investigate this, a fallback if nothing else.
% left = squeeze(imPts(:,:,1));
% right = squeeze(imPts(:,:,2));
% [H, inliers] = ransacfithomography(left, right, 4);

%%%%%%%%%%%%%%%%%%%%% Plot results
nTest = 64;  %% Number of epipolar lines to plot
nCol = 16;   %% Number of different colours to use.
col = hsv(nCol);  %% Colour map.

%% Random sample the lines to plot
idLines = randperm(nPts);  
idLines = idLines(1:nTest);

%% Show left image
SUPERIMPOSE = TRUE;
hFig = figure(2);
clf;
if SUPERIMPOSE
  image(imLeft);
  colormap(gray(256));
end
resizeImageFig(hFig, size(imDwn), 1); hold on;
set(get(hFig,'CurrentAxes'),'Ydir','reverse');
hold on;
% Plot all interest point locations as blue .'s
plot(imPts(1,:,1), imPts(2,:,1), '.b');
set(gca,'YDir', 'reverse');
ax = axis;
title('Left Image');


%% Show right image
SUPERIMPOSE = TRUE;
hFig = figure(3);
clf;
if SUPERIMPOSE
  image(homogWarp(imLeft,H));
  colormap(gray(256));
end
resizeImageFig(hFig, size(imDwn), 1); hold on;
set(get(hFig,'CurrentAxes'),'Ydir','reverse');
hold on;
% Plot all interest point locations as blue .'s
plot(imPts(1,:,2), imPts(2,:,2), '.b');
set(gca,'YDir', 'reverse');
ax = axis;
title('Warped Right Image');

%% save 'Fcorr' F Sa Sf idInlier nInliers